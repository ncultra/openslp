<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-15">
   <meta name="GENERATOR" content="Mozilla/4.72C-CCK-MCD Caldera Systems OpenLinux [en] (X11; U; Linux 2.2.14 i686) [Netscape]">
   <title>OpenSLP Programmers Guide - SLPDeReg()</title>
</head>
<body text="#000000" bgcolor="#FFFFFF" link="#0000EF" vlink="#51188E" alink="#FF0000">

<h2>
SLPDeReg</h2>

<hr WIDTH="100%">
<h3>
Declaration</h3>
<tt><a href="/SLPError.html">SLPError</a> SLPDeReg( <a href="SLPTypes.html#SLPHandle">SLPHandle</a><a href="#hslp">hslp</a>,</tt>
<br><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
const char* <a href="#srvurl">srvurl</a>,</tt>
<br><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

<a href="SLPRegReport.html">SLPRegReport</a> <a href="#callback">callback</a>,</tt>
<br><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
void* <a href="#cookie">cookie</a> )</tt>
<h3>
Description</h3>
Deregisters the advertisement for URL <tt>srvurl</tt> in all scopes where
the service is registered and all language locales. The deregistration
is not just confined to the locale of the <tt>SLPHandle</tt>, it is in
all locales. The API library is required to perform the operation in all
scopes obtained through configuration.
<br>&nbsp;
<h3>
Parameters</h3>

<table CELLPADDING=5 NOSAVE >
<tr VALIGN=TOP NOSAVE>
<td NOSAVE><a NAME="hslp"></a><tt>hslp</tt></td>

<td NOSAVE>The language specific <tt>SLPHandle</tt> on which to de-register
the service.</td>
</tr>

<tr VALIGN=TOP NOSAVE>
<td NOSAVE><a NAME="srvurl"></a><tt>srvurl</tt></td>

<td>The SLP Service URL to de-register.&nbsp; May not be the empty string.&nbsp;
May not be NULL.&nbsp; Must conform to SLP Service URL syntax or <a href="SLPError.html#INVALID_REGISTRATION">SLP_INVALID_REGISTRATION</a>
will be returned.&nbsp; See <a href="Syntax.html">Syntax</a> for more information
on SLP Service URL syntax.</td>
</tr>

<tr VALIGN=TOP NOSAVE>
<td><a NAME="callback"></a><tt>callback</tt></td>

<td NOSAVE>The address of an <tt><a href="SLPRegReport.html">SLPRegReport</a></tt>
function that will be called to report the operation completion status.&nbsp;
See <a href="Callbacks.html">Callbacks</a> for more information on how
callbacks are used by the SLPAPI.</td>
</tr>

<tr VALIGN=TOP NOSAVE>
<td NOSAVE><a NAME="cookie"></a><tt>cookie</tt></td>

<td NOSAVE>Pointer to memory that gets passed to the callback code.&nbsp;
May be NULL.</td>
</tr>

<caption ALIGN=BOTTOM>&nbsp;</caption>
</table>

<h3>
Returns</h3>
<a href="SLPError.html">SLPError</a> Code
<p>Be aware, especially if the call is async, of error codes that may be
passed to the SLPRegReport() callback function.
<br>&nbsp;
<h3>
Notes</h3>
If <tt><a href="SLPError.html#SLP_NETWORK_INIT_FAILED">SLP_NETWORK_INIT_FAILED</a></tt>
is returned, then there is a good chance that slpd is not running.&nbsp;
For flexibility, OpenSLP does not require slpd to be running on all hosts,
but it does require it to be running on those hosts that will be registering
and deregistering services.
<br>&nbsp;
<h3>
Status</h3>

<table CELLPADDING=5 NOSAVE >
<tr VALIGN=TOP NOSAVE>
<td NOSAVE>OpenSLP 0.6.0</td>

<td NOSAVE>Fully implemented as specified by RFC 2614&nbsp;</td>
</tr>
</table>

<h3>
See Also</h3>
<a href="SLPReg.html">SLPReg()</a>, <a href="Syntax.html">Syntax</a>, <a href="Callbacks.html">Callbacks</a>
</body>
</html>
